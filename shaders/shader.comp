#version 450
#extension GL_ARB_separate_shader_objects : enable

#define WIDTH 1000
#define HEIGHT 1000
#define WORKGROUP_SIZE 32

layout (local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE, local_size_z = 1 ) in;

struct Pixel{
    vec4 value;
};

layout(std140, binding = 0) buffer buf
{
    Pixel imageData[];
};

layout(std140, binding = 1) buffer col
{
    float c[];
};

void main() {
    if (gl_GlobalInvocationID.x >= WIDTH || gl_GlobalInvocationID.y >= HEIGHT) {
        return;
    }

    float x = float(gl_GlobalInvocationID.x) / float(WIDTH);// + c[3];
    float y = float(gl_GlobalInvocationID.y) / float(HEIGHT);// + c[4];

    float r = 0.2f;//c[5];

    float d = x * x + y * y / (r * r);// ? 1.0f : 0.0f;
    vec4 color = vec4(vec3(c[1], c[2], c[3]) * d, 1);

    // store the rendered mandelbrot set into a storage buffer:
    imageData[WIDTH * gl_GlobalInvocationID.y + gl_GlobalInvocationID.x].value = color;
}

// vim: set filetype=glsl :
